services:
#######################  Main services
  storage:
    image: minio/minio:RELEASE.2023-05-27T05-56-19Z
    command: server /data --console-address :9001
    restart: always
    expose:
      - 9000
      - 9001
    environment:
      MINIO_ROOT_USER: ${Storage_AccessKey:-STORAGE_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${Storage_Secret:-STORAGE_SECRET_KEY}
      MINIO_PROMETHEUS_AUTH_TYPE: public
      MINIO_BROWSER_REDIRECT_URL: http://minio.example.com
    volumes:
      - miniodata:/data
    networks:
      - services-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
  createbuckets:
    image: minio/mc:RELEASE.2023-05-26T23-31-54Z
    depends_on:
      - storage
    restart: on-failure
    networks:
      - services-net
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add storage http://storage:9000 ${Storage_AccessKey-STORAGE_ACCESS_KEY} ${Storage_Secret-STORAGE_SECRET_KEY} &&
      /usr/bin/mc mb --ignore-existing storage/${Storage_Bucket:-data} &&
      /usr/bin/mc anonymous set download storage/${Storage_Bucket:-data} &&
      exit 0;
      "
  uploader:
    build: ./uploader
    depends_on:
      - storage
      - createbuckets
    expose:
      - 3000
    networks:
      - services-net
    environment:
      PORT: 3000
      S3_HOST: storage
      S3_PORT: 9000
      S3_ACCESS_KEY: ${Storage_AccessKey:-STORAGE_ACCESS_KEY}
      S3_ACCESS_SECRET: ${Storage_Secret:-STORAGE_SECRET_KEY}
      S3_BUCKET: ${Storage_Bucket:-STORAGE_BUCKET}
  security:
    build: ./security
    expose:
      - 3000
    environment:
      PORT: 3000
    networks:
      - services-net
  gateway:
    image: nginx:alpine
    volumes:
      - ./gateway/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:8080"
    networks:
      - services-net
    depends_on:
      - storage
      - uploader
      - security

volumes:
  miniodata:

networks:
  services-net:
    driver: bridge
