
events {
    worker_connections 1024;
    multi_accept on;
}
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    server {
        listen 8080 default_server;

        location /v1 {

            location /v1/register {
                proxy_pass http://security:3000/v1/user;
            }

            location /v1/token {
                proxy_pass http://security:3000/v1/token;
            }

            location /v1/token/validation {
                internal;
                proxy_pass http://security:3000/v1/token/validation;
                proxy_pass_request_body off;
                proxy_set_header        Content-Length "";
                proxy_set_header        X-Original-URI $request_uri;
            }

            location /v1/user {
                proxy_pass http://security:3000/v1/user;
            }

            location ~ ^/v1/user/(.*)$ {
                # add_header Cache-Control 'no-cache, must-revalidate, proxy-revalidate, max-age=0';
                auth_request /v1/token/validation;
                rewrite ^/v1/user/(.*)$ /data/$1 break;
                proxy_pass http://storage:9000;
            }

            location /v1/status {
                auth_request /v1/token/validation;
                proxy_pass http://security:3000/status;
            }

            location /v1/upload {
                auth_request /v1/token/validation;
                proxy_pass http://uploader:3000/v1/upload;
            }

            location /v1/images {
                auth_request /v1/token/validation;
                proxy_pass http://storage:9000/data;
            }


        }
    }
    server {
        listen 8080;
        server_name minio.example.com;
        ignore_invalid_headers off;
        client_max_body_size 0;
        proxy_buffering off;
        proxy_request_buffering off;
        location / {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-NginX-Proxy true;
            real_ip_header X-Real-IP;
            proxy_connect_timeout 300;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            chunked_transfer_encoding off;
            proxy_pass http://storage:9001/;

        }
    }
    server {
        listen 8080;
        server_name api.minio.example.com;
        ignore_invalid_headers off;
        client_max_body_size 0;
        proxy_buffering off;
        proxy_request_buffering off;
        location / {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-NginX-Proxy true;
            real_ip_header X-Real-IP;
            proxy_connect_timeout 300;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            chunked_transfer_encoding off;
            proxy_pass http://storage:9000/;

        }
    }
}
